version: "3.8"

services:
  mule-ee:
    container_name: mule-ee-${MULE_VERSION}
    image: mule-ee-${MULE_VERSION}:1.0.0
    restart: always
    build:
      context: ./containers/mule-ee/
      dockerfile: Dockerfile
      args:
        MULE_HOME: "${MULE_HOME}"
        MULE_VERSION: "${MULE_VERSION}"
    environment:
      MULE_HOME: "${MULE_HOME}"
      MULE_VERSION: "${MULE_VERSION}"
    ports:
      - "5050-5059:5050-5059"
    volumes:
      - type: bind
        source: ./containers/mule-ee/data/apps
        target: /apps

  jenkins:
    container_name: jenkins
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./containers/jenkins
    volumes:
      - type: bind
        source: ./containers/jenkins/data
        target: /var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      JENKINS_USER: "${JENKINS_USER}"
      JENKINS_PASS: "${JENKINS_PASS}"
    ports:
      - "8080:8080"
      - "5000:5000"
      - "50000:50000"

  nexus:
    container_name: nexus
    image: sonatype/nexus3
    restart: always
    volumes:
      - type: bind
        source: ./containers/nexus/data
        target: /sonatype-work
    ports:
      - "8081:8081"
    networks:
      - cicdnet

  sonarqube:
    image: sonarqube
    container_name: sonarqube
    restart: always
    ports:
      - "9000:9000"
    networks:
      - cicdnet
    depends_on:
      - sonardb
    links:
      - sonardb
    environment:
      SONARQUBE_JDBC_URL: "jdbc:postgresql://sonardb:5432/${POSTGRES_DB}"
      SONARQUBE_JDBC_USERNAME: "${POSTGRES_USER}"
      SONARQUBE_JDBC_PASSWORD: "${POSTGRES_PASSWORD}"
    volumes:
      - type: bind
        source: ./containers/sonarqube/data
        target: /var/lib/sonar

  sonardb:
    networks:
      - cicdnet
    image: postgres:9.6.1
    container_name: sonarpostgresdb
    restart: always
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    ports:
      - "5432:5432"
    volumes:
      - type: bind
        source: ./containers/postgresql/data
        target: /var/lib/postgresql

networks:
  cicdnet:
    driver: bridge